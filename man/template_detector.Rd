% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_detector.R
\name{template_detector}
\alias{template_detector}
\title{Acoustic template detection from time-frequency cross-correlations}
\usage{
template_detector(template.correlations, cores = 1, threshold, pb = TRUE,
 verbose = TRUE)
}
\arguments{
\item{template.correlations}{object of class 'template_correlations' generated by \code{\link{template_correlator}} containing the correlation score vectors.}

\item{cores}{Numeric. Controls whether parallel computing is applied.
It specifies the number of cores to be used. Default is 1 (i.e. no parallel computing).}

\item{threshold}{Numeric vector of length 1 with a value between 0 and 1 specifying the correlation threshold for detecting sound event occurrences (i.e. correlation peaks). Must be supplied. Correlation scores are forced to between 0 and 1 (by converting negative scores to 0). 0 and 1 represent the lowest and highest similarity to the template respectively.}

\item{pb}{Logical argument to control progress bar. Default is \code{TRUE}.}

\item{verbose}{Logical argument to control if some summary messages are printed to the console.}
}
\value{
The function returns a 'selection_table' (warbleR package's formats, see \code{\link[warbleR]{selection_table}}) or data frame (if sound files can't be found) with the start and end and correlation score for the
detected sound events.
}
\description{
\code{template_detector} find sound event occurrences in cross-correlation vectors from \code{\link{template_correlator}}
}
\details{
This function infers sound events occurrences from cross-correlation scores along sound files. Correlation scores must be generated first using \code{\link{template_correlator}}. The output is a data frame (or selection table if sound files are still found in the original path supplied to \code{\link{template_correlator}}, using the warbleR package's format, see \code{\link[warbleR]{selection_table}}) containing the start and end of the detected sound events as well as the cross-correlation score ('scores' column) for each detection.
}
\examples{
{
# load example data
data("lbh1", "lbh2", "lbh_reference")

# save sound files
writeWave(lbh1, file.path(tempdir(), "lbh1.wav"))
writeWave(lbh2, file.path(tempdir(), "lbh2.wav"))

# template for the first sound file in 'lbh_reference'
templ1 <- lbh_reference[1, ]

# generate template correlations
tc <- template_correlator(templates = templ1, path = tempdir(), files = "lbh1.wav")

# template detection
td <- template_detector(template.correlations = tc, threshold = 0.4)

# diagnose detection
diagnose_detection(reference =
lbh_reference[lbh_reference$sound.files == "lbh1.wav", ],
detection = td)

# template for the second and third sound file in 'lbh_reference'
# which have similar song types
templ2 <- lbh_reference[4, ]

# generate template correlations
tc <- template_correlator(templates = templ2, path = tempdir(),
files = c("lbh1.wav", "lbh2.wav"))

# template detection
td <- template_detector(template.correlations = tc, threshold = 0.3)

# diagnose detection
diagnose_detection(reference = lbh_reference, detection = td)
}
}
\references{
{
Araya-Salas, M. (2021), ohun: diagnosing and optimizing automated sound event detection. R package version 0.1.0.
}
}
\seealso{
\code{\link{energy_detector}}, \code{\link{template_correlator}}, \code{\link{optimize_template_detector}}
}
\author{
Marcelo Araya-Salas \email{marcelo.araya@ucr.ac.cr})
}
