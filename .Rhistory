diagnose_detection(reference = lbh_reference[-1, ], detection = lbh_reference, time.diagnostics = TRUE)
# and extra sound file in reference
diagnose_detection(reference = lbh_reference, detection = lbh_reference[lbh_reference$sound.files != "lbh1.wav", ], time.diagnostics = TRUE)
# and extra sound file in detection
diagnose_detection(reference = lbh_reference[lbh_reference$sound.files != "lbh1.wav", ], detection = lbh_reference, time.diagnostics = TRUE)
# and extra sound file in detection by sound file
dd <- diagnose_detection(reference = lbh_reference[lbh_reference$sound.files != "lbh1.wav", ], detection = lbh_reference, time.diagnostics = TRUE, by.sound.file = TRUE)
# with path
dd <- diagnose_detection(reference = lbh_reference[lbh_reference$sound.files != "lbh1.wav", ], detection = lbh_reference, time.diagnostics = TRUE, by.sound.file = TRUE, path = tempdir())
# get summary
summarize_diagnostic(dd)
# merged detection
lbh_selec2 <- lbh_reference
lbh_selec2$end[11] <- 3
lbh_selec2$end[12] <- 3
diagnose_detection(reference = lbh_selec2, detection = lbh_reference, time.diagnostics = FALSE, by.sound.file = F)
# using "by"
lbh_selec2$iter <- "first"
lbh_reference$iter <- "second"
lbh_reference$iter  <- as.factor(lbh_reference$iter )
det <- rbind(as.data.frame(lbh_reference), as.data.frame(lbh_selec2))
diagnose_detection(reference = lbh_reference, detection = det, by = "iter", by.sound.file = FALSE, pb = FALSE, parallel = 2)
# by sound file
diagnose_detection(reference = lbh_reference, detection = det, by = "iter", by.sound.file = TRUE, pb = FALSE, parallel = 2)
# system("autoconf  ")
# usethis::use_rcpp()
# setwd("./warbleR/")
#delete NAMESPACE file
# Rcpp::compileAttributes()
#run document twice
# devtools::document(".")
# devtools::load_all()
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = TRUE, vignettes = FALSE, manual = TRUE)
# devtools::run_examples( start = "rm_sil")
# devtools::build_manual()
# devtools::install()
# check in R version 3.X.X
## run in terminal:
# /opt/R/3.6.3/bin/R
# devtools::check("~/Dropbox/R_package_testing/warbleR/warbleR", document = TRUE, run_dont_test = TRUE, vignettes = FALSE, manual = TRUE)
median()
median(1:2)
median(1:3)
library(ggplot2)
library(ggstance)
library(ggtree)
library(reshape2)
install.packages("ggstance")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
library(ggplot2)
library(ggstance)
library(ggtree)
library(reshape2)
set.seed(123)
tree <- rtree(30)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab() + theme(legend.position='none')
a <- runif(30, 0,1)
b <- 1 - a
df <- data.frame(tree$tip.label, a, b)
df <- melt(df, id = "tree.tip.label")
p2 <- facet_plot(p + xlim_tree(8), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity') + xlim_tree(9)
p2
p
p2 <- facet_plot(p + xlim_tree(8), panel = 'bar', data = df, geom = geom_bar,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity') + xlim_tree(9)
p2
facet_plot(p3 + xlim_tree(8), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity')
facet_plot(p2 + xlim_tree(8), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity')
facet_plot(p2 + xlim_tree(9), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity')
facet_plot(p2 + xlim_tree(10), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity')
facet_plot(p2 + xlim_tree(20), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity')
p2
p
p2 <- facet_plot(p + xlim_tree(8), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity') + xlim_tree(9)
p2
facet_plot(p2, panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity')
facet_plot(p2, panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 2, stat='identity')
facet_plot(p2, panel = 'bar2', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 2, stat='identity')
facet_plot(p2, panel = 'bar2', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 2)
facet_plot(p2, panel = 'bar2', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)))
facet_plot(p2, panel = 'bar2', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 2, stat='identity')
facet_plot(p2, panel = 'bar2', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 2, stat='identity') + xlim_tree(9)
facet_plot(p2, panel = 'bar2', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity') + xlim_tree(9)
facet_plot(p2, panel = 'bar2', data = df, geom = geom_colh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity') + xlim_tree(9)
df
mapping = aes(x = value,
mapping = aes(x = value,
facet_plot(p2, panel = 'bar2', data = df, geom = geom_colh,
mapping = aes(x = value),
width = 0.8, stat='identity') + xlim_tree(9)
facet_plot(p2, panel = 'bar2', data = df[1:30, ], geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity') + xlim_tree(9)
a <- runif(30, 0,1)
df <- data.frame(tree$tip.label, a)
df <- melt(df, id = "tree.tip.label")
p
p2 <- facet_plot(p + xlim_tree(8), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = value, fill = as.factor(variable)),
width = 0.8, stat='identity') + xlim_tree(9)
p2
a <- runif(30, 0,1)
b <- runif(30, 0,1)
d <- runif(30, 0,1)
v1 <- runif(30, 0,1)
v2 <- runif(30, 0,1)
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
df <- melt(df, id = "tree.tip.label")
p
df
df <- data.frame(tree$tip.label, v1, v2, v3)
df <- melt(df, id = "tree.tip.label")
df
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
p
p2 <- facet_plot(p + xlim_tree(8), panel = 'bar', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9)
p2
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9)
p2
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + xlim_tree(6) + theme_classic()
p2
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') +  theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') +theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
p2
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
p2
tree
nodelab(p)
nodelab(p, "a")
p3 <- ggtree(tree, aes(color=branch.length)) +
xlim(0, 90) +
geom_tiplab(size=2, color="plum1") +
geom_label2(aes(subset=!isTip, label=node), size=2, color="darkred", alpha=0.5) +
theme_tree2("black") +
scale_color_continuous(low='white', high='hotpink', name="Branch length (my)") +
theme(legend.position="bottom")
plot(p3)
p3 <- ggtree(tree, aes(color=branch.length)) +
# xlim(0, 90) +
geom_tiplab(size=2, color="plum1") +
geom_label2(aes(subset=!isTip, label=node), size=2, color="darkred", alpha=0.5) +
theme_tree2("black") +
scale_color_continuous(low='white', high='hotpink', name="Branch length (my)") +
theme(legend.position="bottom")
plot(p3)
p3 <- ggtree(tree, aes(color=branch.length)) +
# xlim(0, 90) +
geom_tiplab(size=2, color="plum1") +
geom_label2(aes(subset=!isTip, label=node), size=2, color="darkred", alpha=0.5) +
scale_color_continuous(low='white', high='hotpink', name="Branch length (my)") +
theme(legend.position="bottom")
p3
p3 <- ggtree(tree, aes(color=branch.length)) +
# xlim(0, 90) +
geom_tiplab(size=2, color="plum1") +
geom_label2(aes(subset=!isTip, label=node), size=2, color="darkred", alpha=0.5)
p3
tree <- rtree(30)
p + geom_label2(aes(subset=!isTip, label=node), size=2, color="darkred", alpha=0.5)
p + geom_label2(aes(subset=!isTip, label=node), size=2)
p + geom_label2(aes(subset=!isTip, label=node), size=4)
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab() + theme(legend.position='none')
p
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(offset=0.1, hjust=0, size=2.5) + theme(legend.position='none')
p
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(offset=0.1, hjust=0, size=0) + theme(legend.position='none')
v1 <- runif(30, 0,1)
p
v1 <- runif(30, 0,1)
v2 <- runif(30, 0,1)
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
geom_cladelabel(147, "clade1", offset=25, barsize=2, angle=90, offset.text=1.5, hjust=0.5, fontsize=3) +
geom_cladelabel(113, "Lemuroidea", offset=25, barsize=2, angle=90, offset.text=1.5, hjust=0.5, fontsize=3) +
geom_cladelabel(110, "Tarsioidea", offset=25, barsize=2, angle=75, offset.text=2.5, hjust=0.2, fontsize=2) +
geom_cladelabel(96, "Ceboidea", offset=25, barsize=2, angle=90, offset.text=1.5, hjust=0.5, fontsize=3) +
geom_cladelabel(89, "Hominoidea", offset=25, barsize=2, angle=90, offset.text=1.5, hjust=0.5, fontsize=3) +
geom_cladelabel(70, "Cercopithecoidea", offset=25, barsize=2, angle=90, offset.text=1.5, hjust=0.5, fontsize=3)
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
p2
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
set.seed(123)
tree <- rtree(30)
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(size=0) + theme(legend.position='none')
p  + geom_cladelabel(39, "clade1", offset=25, barsize=2, angle=90, offset.text=1.5, hjust=0.5, fontsize=3)
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
p2  + geom_cladelabel(39, "clade1", offset=25, barsize=2, angle=90, offset.text=1.5, hjust=0.5, fontsize=3)
set.seed(123)
tree <- rtree(30)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(size=0) + theme(legend.position='none')
v1 <- runif(30, 0,1)
v2 <- runif(30, 0,1)
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
set.seed(123)
tree <- rtree(30)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(size=0) + theme(legend.position='none')
v1 <- runif(30, 0,1)
v2 <- runif(30, 0,1)
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
set.seed(123)
tree <- rtree(30)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(size=0) + theme(legend.position='none')
v1 <- runif(30, 0,1)
v2 <- runif(30, 0,1)
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
p2  + geom_cladelabel(46, "clade1", offset=25, barsize=2, angle=90)
p2  + geom_cladelabel(46, "clade1", barsize=2, angle=90)
p2  + geom_cladelabel(46, "clade1", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=2)
p2  + geom_cladelabel(46, "clade1", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5)
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
p2  + geom_cladelabel(46, "clade 1", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5) +
geom_cladelabel(32, "clade 2", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5)
# if (!require("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
#
# BiocManager::install("ggtree")
library(ggplot2)
library(ggstance)
library(ggtree)
library(reshape2)
set.seed(123)
tree <- rtree(30)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(size=0) + theme(legend.position='none')
v1 <- runif(30, 0,1)
v2 <- runif(30, 0,1)
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
p2  + geom_cladelabel(46, "clade 1", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5) +
geom_cladelabel(32, "clade 2", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5)
p2  + geom_cladelabel(46, "clade 1", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5) +
geom_cladelabel(32, "clade 2", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5)
library(grid)
library(gtable)
gt = ggplot_gtable(ggplot_build(p2))
gtable_show_layout(gt) # will show you the layout - very handy function
gt # see plot layout in table format
# gt # see plot layout in table format
gt$layout$l[grep('panel-2', gt$layout$name)] # you want to find the column specific to panel-2
# gt # see plot layout in table format
gt$layout$l[grep('v2', gt$layout$name)] # you want to find the column specific to panel-2
gt$layout$name
# gt # see plot layout in table format
gt$layout$l[grep('panel-1-2', gt$layout$name)] # you want to find the column specific to panel-2
gt$widths[7] = 0.5*gt$widths[7] # in this case it was colmun 7 - reduce the width by a half
grid.draw(gt)
# gt # see plot layout in table format
gt$layout$l[grep('panel-1', gt$layout$name)] # you want to find the column specific to panel-2
gt$widths[7] = 0.5*gt$widths[7] # in this case it was colmun 7 - reduce the width by a half
grid.draw(gt)
gt$layout$name
gt = ggplot_gtable(ggplot_build(p2))
gtable_show_layout(gt) # will show you the layout - very handy function
# gt # see plot layout in table format
wp <- gt$layout$l[grep('panel-1', gt$layout$name)] # you want to find the column specific to panel-2
gt$widths[wp] = 0.5*gt$widths[wp] # in this case it was colmun 7 - reduce the width by a half
grid.draw(gt)
wp
gt = ggplot_gtable(ggplot_build(p2))
gtable_show_layout(gt) # will show you the layout - very handy function
# gt # see plot layout in table format
wp <- gt$layout$l[grep('panel-1', gt$layout$name)] # you want to find the column specific to panel-2
gt$widths[wp] = 0.2*gt$widths[wp] # in this case it was colmun 7 - reduce the width by a half
grid.draw(gt)
gt = ggplot_gtable(ggplot_build(p2))
gtable_show_layout(gt) # will show you the layout - very handy function
# gt # see plot layout in table format
wp <- gt$layout$l[grep('panel-1-1', gt$layout$name)] # you want to find the column specific to panel-2
gt$widths[wp] = 0.5*gt$widths[wp] # in this case it was colmun 7 - reduce the width by a half
grid.draw(gt)
gt$widths[wp] = 1.5*gt$widths[wp] # in this case it was colmun 7 - reduce the width by a half
grid.draw(gt)
gt = ggplot_gtable(ggplot_build(p2))
gtable_show_layout(gt) # will show you the layout - very handy function
# gt # see plot layout in table format
wp <- gt$layout$l[grep('panel-1-1', gt$layout$name)] # you want to find the column specific to panel-2
gt$widths[wp] = 1.5*gt$widths[wp] # in this case it was colmun 7 - reduce the width by a half
grid.draw(gt)
# if (!require("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
#
# BiocManager::install("ggtree")
library(ggplot2)
library(ggstance)
library(ggtree)
library(reshape2)
set.seed(123)
tree <- rtree(30)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(size=0) + theme(legend.position='none')
v1 <- runif(30, 0,1)
v2 <- runif(30, 0,1)
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
p2  + geom_cladelabel(46, "clade 1", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5) +
geom_cladelabel(32, "clade 2", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5)
library(grid)
library(gtable)
# make phylogeny wider
gt = ggplot_gtable(ggplot_build(p2))
# gtable_show_layout(gt) # will show you the layout - very handy function
wp <- gt$layout$l[grep('panel-1-1', gt$layout$name)]
gt$widths[wp] = 2.5*gt$widths[wp]
grid.draw(gt)
# if (!require("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
#
# BiocManager::install("ggtree")
library(ggplot2)
library(ggstance)
library(ggtree)
library(reshape2)
set.seed(123)
tree <- rtree(30)
p <- ggtree(tree, branch.length = "none") +
geom_tiplab(size=0) + theme(legend.position='none')
v1 <- runif(30, 0,1)
v2 <- runif(30, 0,1)
v3 <- runif(30, 0,1)
df <- data.frame(tree$tip.label, v1, v2, v3)
p2 <- facet_plot(p + xlim_tree(8), panel = 'v1', data = df, geom = geom_barh,
mapping = aes(x = v1), fill = "red",
width = 0.8, stat='identity') + xlim_tree(9) + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v2', data = df, geom = geom_barh,
mapping = aes(x = v2), fill = "blue",
width = 0.8, stat='identity') + theme_classic()
p2 <- facet_plot(p2 + xlim_tree(8), panel = 'v3', data = df, geom = geom_barh,
mapping = aes(x = v3), fill = "green",
width = 0.8, stat='identity') + theme_classic()
# check node number
p + geom_label2(aes(subset=!isTip, label=node), size=4)
p2 <- p2  + geom_cladelabel(46, "clade 1", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5) +
geom_cladelabel(32, "clade 2", barsize=1, angle=90, offset.text=1.5, hjust=0.5, fontsize=5)
# make phylogeny wider
library(grid)
library(gtable)
gt = ggplot_gtable(ggplot_build(p2))
# gtable_show_layout(gt) # will show you the layout - very handy function
wp <- gt$layout$l[grep('panel-1-1', gt$layout$name)]
gt$widths[wp] = 2.5*gt$widths[wp]
grid.draw(gt)
